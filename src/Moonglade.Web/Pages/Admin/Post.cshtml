@page "/admin/post"
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@inject ITimeZoneResolver ZoneResolver
@model Moonglade.Web.Pages.Admin.PostModel
@{
    ViewBag.Title = "Manage Posts";
}

@section scripts{
    <script>
        function deleteConfirm(postid) {
            var cfm = confirm("Delete Confirmation?");
            if (cfm) {
                deletePost(postid);
            }
        }

        function deletePost(postid) {
            console.info(postid);

            callApi(`/api/post/${postid}/recycle`,
                'DELETE',
                {},
                (resp) => {
                    $(`#post-${postid}`).remove();
                });
        }
    </script>
}

<partial name="_PostManageHeader" />
@Html.AntiForgeryToken()

<div class="ps-4 pe-4">
    @if (Model.PostSegments.Count == 0)
    {
        <partial name="_NoPosts"/>
    }
    else
    {
        foreach (var item in Model.PostSegments)
        {
            <div id="post-@item.Id" class="d-flex">
                <div class="flex-grow-1">
                    <a asp-page="/Post"
                       asp-route-year="@item.PubDateUtc.GetValueOrDefault().Year"
                       asp-route-month="@item.PubDateUtc.GetValueOrDefault().Month"
                       asp-route-day="@item.PubDateUtc.GetValueOrDefault().Day"
                       asp-route-slug="@item.Slug">
                        <h6>
                            @item.Title
                        </h6>
                    </a>
                    <div>
                        <span class="text-muted">@ZoneResolver.ToTimeZone(item.PubDateUtc.GetValueOrDefault()).ToString("yyyy-MM-dd HH:mm")</span> <span class="text-muted">@item.Hits</span>
                    </div>
                </div>

                <div>
                    <a class="btn btn-outline-accent btn-sm btn-edit" asp-page="./EditPost" asp-route-id="@item.Id"><i class="bi-pen"></i></a>
                    <button class="btn btn-outline-danger btn-sm btn-delete" onclick="deleteConfirm('@item.Id')"><i class="bi-trash"></i></button>
                </div>
            </div>
            <hr />
        }

        @Html.PagedListPager(Model.PostSegments, page => $"?pageIndex={page}", new PagedListRenderOptions
        {
            LiElementClasses = new[] {"page-item"},
            PageClasses = new[] {"page-link"},
            UlElementClasses = new[] {"pagination justify-content-end"},
            DisplayEllipsesWhenNotShowingAllPageNumbers = false
        })
    }
</div>